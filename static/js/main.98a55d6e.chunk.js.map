{"version":3,"sources":["assets/images/people/dummyPerson.jpg","assets/images sync /^/.*/.jpg$","assets/images/people/barack-obama.jpg","assets/images/people/elon-musk.jpg","assets/images/people/marie-curie.jpg","assets/images/people/robert-pattinson.jpg","assets/images/people/wolfgang-amadeus-mozart.jpg","components/navbar.js","utils/sample.js","utils/levenshteinDistance.js","utils/SparqlClient.js","utils/truncate.js","components/celeb.js","components/chooseStartActorForm.js","components/guessForm.js","components/layout/basiclayout.js","pages/playpage.js","pages/aboutpage.js","pages/homepage.js","pages/missedpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","MyNavbar","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","sample","arr","Math","floor","random","length","levenshteinDistance","a","b","i","j","matrix","charAt","min","SparqlClient","url","this","baseUrl","queryString","encodeURIComponent","fetch","headers","then","res","json","parseSparqlResult","name","limit","query","sparql","movie","movieLabel","movies","Promise","all","getActorsForMovie","result","actor","getMoviesForActor","actorLabel","getActorsForMovies","actorGroups","actors","actorGroup","relatedActor","push","guessed","encountered","relatedActorsPath","image","genderLabel","results","parseField","type","value","bindings","entry","entries","key","field","parsed","parseEntry","truncate","str","num","slice","styled","div","Celeb","ContinueButton","handleClick","Button","variant","onClick","ChooseStartActorForm","chooseInitialActor","client","useState","message","setMessage","setActor","continueWithActor","validationSchema","Yup","shape","required","Row","Col","Image","src","fluid","dummyPerson","initialValues","onSubmit","setSubmitting","resetForm","getDetailsForActor","values","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Group","controlId","Control","placeholder","onChange","onBlur","guess","Alert","disabled","TruncatedMovieTitle","OverlayTrigger","delay","show","hide","overlay","props","Tooltip","placement","GuessForm","currentActor","makeGuess","next","guessResult","guessCount","hints","setHints","slogan","Table","striped","bordered","hover","index","actor1","actor2","setFieldValue","prefill","getHint","nextAndClear","includes","getNextButton","BasicLayout","children","Container","PlayPage","AboutPage","HomePage","Jumbotron","ActorCard","Card","style","width","Img","Body","Title","MissedPage","missedActors","filter","CardColumns","App","setCurrentActor","setGuessCount","setGuessResult","allActors","setAllActors","unencounteredActors","v","setNextActor","nextActor","console","log","populateRelatedActors","getRelatedActors","newActors","mergeActors","actorDict1","actorDict2","actorName","actorObject","getGuessResult","distance","toLowerCase","ceil","RegExp","test","Switch","exact","strict","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.98a55d6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummyPerson.9a77ac29.jpg\";","var map = {\n\t\"./people/barack-obama.jpg\": 143,\n\t\"./people/dummyPerson.jpg\": 102,\n\t\"./people/elon-musk.jpg\": 144,\n\t\"./people/marie-curie.jpg\": 145,\n\t\"./people/robert-pattinson.jpg\": 146,\n\t\"./people/wolfgang-amadeus-mozart.jpg\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 142;","module.exports = __webpack_public_path__ + \"static/media/barack-obama.3d65446b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elon-musk.3c3f6866.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marie-curie.a4112ba3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/robert-pattinson.b036345d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wolfgang-amadeus-mozart.dc1b1c11.jpg\";","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\n\nconst MyNavbar = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand as={Link} to=\"/\">Whatzr Face?</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"play\">Play</Nav.Link>\n                    <Nav.Link as={Link} to=\"missed\">Who did i miss</Nav.Link>\n                    <Nav.Link as={Link} to=\"about\">About</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default MyNavbar","function sample(arr) {\n    const index = Math.floor(Math.random() * arr.length)\n    return arr[index]\n}\n\nexport default sample","function levenshteinDistance(a, b) {\r\n    if (a.length === 0) return b.length;\r\n    if (b.length === 0) return a.length;\r\n\r\n    var matrix = [];\r\n\r\n    // increment along the first column of each row\r\n    var i;\r\n    for (i = 0; i <= b.length; i++) {\r\n        matrix[i] = [i];\r\n    }\r\n\r\n    // increment each column in the first row\r\n    var j;\r\n    for (j = 0; j <= a.length; j++) {\r\n        matrix[0][j] = j;\r\n    }\r\n\r\n    // Fill in the rest of the matrix\r\n    for (i = 1; i <= b.length; i++) {\r\n        for (j = 1; j <= a.length; j++) {\r\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n                matrix[i][j] = matrix[i - 1][j - 1];\r\n            } else {\r\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\r\n                    Math.min(matrix[i][j - 1] + 1, // insertion\r\n                        matrix[i - 1][j] + 1)); // deletion\r\n            }\r\n        }\r\n    }\r\n\r\n    return matrix[b.length][a.length];\r\n};\r\n\r\nexport default levenshteinDistance","class SparqlClient {\r\n    constructor(url = 'https://query.wikidata.org/sparql') {\r\n        this.baseUrl = url\r\n    }\r\n\r\n    async sparql(queryString) {\r\n        const url = this.baseUrl + '?query=' + encodeURIComponent(queryString)\r\n        return fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/sparql-results+json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(this.parseSparqlResult)\r\n    }\r\n\r\n    async getMoviesForActor(name, limit = 5) {\r\n        const query = `\r\n            SELECT distinct ?movie ?movieLabel\r\n            WHERE {\r\n                ?actor rdfs:label \"${name}\"@en.\r\n                ?actor wdt:P106 ?occupation.\r\n                ?occupation wdt:P279+ wd:Q33999.\r\n                ?movie wdt:P161 ?actor.\r\n                ?movie wdt:P2142 ?boxOffice.\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n            }\r\n            ORDER BY DESC(?boxOffice)\r\n            limit ${limit}\r\n        `\r\n        return this.sparql(query)\r\n    }\r\n\r\n    async getActorsForMovie(movie, limit = 10) {\r\n        const query = `\r\n            SELECT distinct ?movie ?movieLabel ?actor ?actorLabel ?genderLabel ?image\r\n            WHERE {\r\n                ?movie wdt:P31/wdt:P279* wd:Q11424.\r\n                ?movie rdfs:label \"${movie.movieLabel}\"@en.\r\n                ?movie wdt:P161 ?actor.\r\n                ?actor wdt:P21 ?gender.\r\n                ?actor wdt:P18 ?image.\r\n                OPTIONAL { ?actor wdt:P2218 ?netWorth }.\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n            }\r\n            order by DESC(?netWorth)\r\n            limit ${limit}\r\n        `\r\n        return this.sparql(query)\r\n    }\r\n\r\n    async getActorsForMovies(movies) {\r\n        return await Promise.all(\r\n            movies.map(async (movie) => {\r\n                return await this.getActorsForMovie(movie)\r\n            })\r\n        )\r\n    }\r\n\r\n    async getDetailsForActor(name, limit = 1) {\r\n        const query = `\r\n            SELECT distinct ?actor ?actorLabel ?image ?genderLabel\r\n            WHERE {\r\n                ?actor rdfs:label \"${name}\"@en.\r\n                ?actor wdt:P106 ?occupation.\r\n                ?actor wdt:P21 ?gender\r\n                OPTIONAL{?actor wdt:P18 ?image}.\r\n                ?occupation wdt:P279* wd:Q33999.\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n            }\r\n            limit ${limit}\r\n        `\r\n        return this.sparql(query)\r\n            .then((result) => {\r\n                return result[0]\r\n            })\r\n    }\r\n\r\n    async getRelatedActors(actor) {\r\n        return this.getMoviesForActor(actor.actorLabel)\r\n            .then((movies) => {\r\n                return this.getActorsForMovies(movies)\r\n            })\r\n            .then((actorGroups) => {\r\n                const actors = {}\r\n                for (const actorGroup of actorGroups) {\r\n                    for (const relatedActor of actorGroup) {\r\n                        const name = relatedActor.actorLabel\r\n                        const movie = {\r\n                            movieLabel: relatedActor.movieLabel,\r\n                            movie: relatedActor.movie,\r\n                        }\r\n                        if (name in actors) {\r\n                            actors[name].movies.push(movie)\r\n                        } else {\r\n                            actors[name] = {\r\n                                guessed: actor.actorLabel === name ? true : null,\r\n                                encountered: actor.actorLabel === name,\r\n                                relatedActorsPath: [...(actor.relatedActorsPath || []), [[actor, movie, relatedActor]]],\r\n                                actorLabel: name,\r\n                                actor: relatedActor.actor,\r\n                                image: relatedActor.image,\r\n                                genderLabel: relatedActor.genderLabel,\r\n                                movies: [movie],\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return actors\r\n            })\r\n    }\r\n\r\n    parseSparqlResult({ results }) {\r\n        const parseField = ({ type, value }) => {\r\n            switch (type) {\r\n                case \"literal\":\r\n                    return value\r\n                case \"uri\":\r\n                    return value\r\n                default:\r\n                    return value\r\n            }\r\n        }\r\n        const parseEntry = (entry) => {\r\n            const result = {}\r\n            for (const [key, field] of Object.entries(entry)) {\r\n                const parsed = parseField(field)\r\n                result[key] = parsed\r\n            }\r\n            return result\r\n        }\r\n        return results.bindings.map((entry) => {\r\n            return parseEntry(entry)\r\n        })\r\n    }\r\n}\r\n\r\nexport default SparqlClient","function truncate(str, num) {\r\n    if (str.length <= num) {\r\n        return str\r\n    }\r\n    return str.slice(0, num) + '...'\r\n}\r\n\r\nexport default truncate","import React from 'react'\nimport { Image } from 'react-bootstrap';\nimport { loadImage, slugify } from '../utils'\nimport styled from 'styled-components'\n\nconst ImageWrapper = styled.div`\n    width: 500px;\n    height: 900px;\n`\n\nfunction Celeb({ person }) {\n    const image = loadImage(`people/${slugify(person.name)}`)\n    return (\n        <ImageWrapper>\n            <Image src={image} fluid />\n        </ImageWrapper>\n    )\n}\n\nexport default Celeb","import React, { useState } from 'react'\r\nimport { Form, Button, Row, Col, Image, Alert } from 'react-bootstrap';\r\nimport { SparqlClient } from '../utils';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport dummyPerson from '../assets/images/people/dummyPerson.jpg'\r\n\r\nconst ContinueButton = ({ actor, handleClick }) => {\r\n    if (actor) {\r\n        return <Button variant=\"success\" type=\"button\" onClick={handleClick}>Start with {actor.genderLabel === 'female' ? \"her\" : \"him\"}!</Button >\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nconst ChooseStartActorForm = ({ chooseInitialActor }) => {\r\n    const client = new SparqlClient()\r\n    const [message, setMessage] = useState(null)\r\n    const [actor, setActor] = useState(null)\r\n    const searchActor = ({ name }, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true)\r\n        setMessage('')\r\n        client.getDetailsForActor(name)\r\n            .then((actor) => {\r\n                if (actor) {\r\n                    setActor(actor)\r\n                } else {\r\n                    setMessage(\"actor not found\")\r\n                }\r\n                setSubmitting(false)\r\n                resetForm()\r\n            })\r\n    }\r\n    const continueWithActor = () => {\r\n        chooseInitialActor(actor)\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .required(\"*Name is required\"),\r\n    });\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                {actor ?\r\n                    <Image src={actor.image} fluid />\r\n                    :\r\n\r\n                    <Image src={dummyPerson} fluid />\r\n                }\r\n            </Col>\r\n            <Col>\r\n                <Formik\r\n                    validationSchema={validationSchema}\r\n                    initialValues={{ name: 'Daniel Radcliffe' }}\r\n                    onSubmit={searchActor}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                    }) => (\r\n                            <Form onSubmit={handleSubmit} >\r\n                                <Form.Group controlId=\"formName\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder={\"Who do you want to start with?\"}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.guess}\r\n                                    />\r\n                                </Form.Group>\r\n                                {message ? <Alert variant=\"warning\">{message}</Alert> : ''}\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button >\r\n                                <ContinueButton actor={actor} handleClick={continueWithActor} />\r\n                            </Form>\r\n                        )}\r\n                </Formik>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ChooseStartActorForm","import React, { useState } from 'react'\r\nimport { Form, Button, Row, Col, Image, Alert, Table, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport { truncate } from '../utils';\r\nimport * as Yup from 'yup';\r\n\r\nfunction TruncatedMovieTitle({ movie }) {\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            {movie.movieLabel}\r\n        </Tooltip>\r\n    );\r\n\r\n    if (movie.movieLabel.length > 20) {\r\n        return (<OverlayTrigger\r\n            delay={{ show: 150, hide: 200 }}\r\n            overlay={renderTooltip}\r\n            placement=\"top\"\r\n        >\r\n            <span>{truncate(movie.movieLabel, 20)}</span>\r\n        </OverlayTrigger >\r\n        )\r\n    } else {\r\n        return truncate(movie.movieLabel, 20)\r\n    }\r\n}\r\n\r\n\r\nconst GuessForm = ({ currentActor, makeGuess, next, guessCount, guessResult }) => {\r\n    const [hints, setHints] = useState(0)\r\n    const validationSchema = Yup.object().shape({\r\n        guess: Yup.string()\r\n            .required(\"*Name is required\"),\r\n    });\r\n    const getMessage = () => {\r\n        if (guessResult === 'EXACT') {\r\n            return <Alert variant='success'> Gottem! Nice!</Alert>\r\n        } else if (guessResult === 'CLOSE_ENOUGH') {\r\n            return <Alert variant='secondary'> eh, close enough! it was {currentActor.actorLabel}</Alert>\r\n        } else if (guessResult === 'PARTIAL') {\r\n            return <Alert variant='warning'> We are looking for the full name!</Alert>\r\n        } else if (guessResult === 'CLOSE') {\r\n            return <Alert variant='warning'> close, but not quite!</Alert>\r\n        } else if (guessResult === 'WRONG') {\r\n            return <Alert variant='danger'> Not even close!</Alert>\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n    const getNextButton = (resetForm) => {\r\n        const nextAndClear = () => {\r\n            setHints(0)\r\n            resetForm()\r\n            next()\r\n        }\r\n        if (['EXACT', 'CLOSE_ENOUGH'].includes(guessResult)) {\r\n            return <Button onClick={nextAndClear} variant=\"success\" type=\"button\">Next</Button >\r\n        } else {\r\n            return <Button onClick={nextAndClear} variant=\"danger\" type=\"button\">Skip</Button >\r\n        }\r\n    }\r\n    const getHint = (setFieldValue) => {\r\n        const prefill = currentActor.actorLabel.slice(0, hints + 1)\r\n        setHints(hints => hints + 1)\r\n        setFieldValue('guess', prefill)\r\n    }\r\n    const slogan = `Whatz${currentActor.genderLabel === 'female' ? 'r' : 'iz'} Face?`\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Image src={currentActor.image} fluid />\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>original actor</th>\r\n                            <th>played in</th>\r\n                            <th>with</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {currentActor.relatedActorsPath.map(([[actor1, movie, actor2]], index) => {\r\n                            return (<tr key={`${actor1.actorLabel}|${movie.movieLabel}|${actor2.actorLabel}`}>\r\n                                <td>\r\n                                    {index + 1}\r\n                                </td>\r\n                                <td>\r\n                                    {actor1.actorLabel}\r\n                                </td>\r\n                                <td>\r\n                                    <TruncatedMovieTitle movie={movie} />\r\n                                </td>\r\n                                <td>\r\n                                    {index === currentActor.relatedActorsPath.length - 1 ? <b>{slogan}</b> : actor2.actorLabel}\r\n                                </td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table >\r\n            </Col>\r\n            <Col>\r\n                <Formik\r\n                    validationSchema={validationSchema}\r\n                    initialValues={{ guess: '' }}\r\n                    onSubmit={makeGuess}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        resetForm,\r\n                        setFieldValue,\r\n                    }) => (\r\n                            <Form onSubmit={handleSubmit} >\r\n                                <Form.Group controlId=\"formName\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"guess\"\r\n                                        placeholder={slogan}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.guess}\r\n                                    />\r\n                                </Form.Group>\r\n                                {getMessage()}\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button >\r\n                                <Button variant=\"secondary\" type=\"button\" disabled={isSubmitting} onClick={() => { getHint(setFieldValue) }}>Hint!</Button >\r\n                                {getNextButton(resetForm)}\r\n                            </Form>\r\n                        )}\r\n                </Formik>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default GuessForm","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Navbar } from '../../components';\n\nconst BasicLayout = ({ children }) => {\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Navbar />\n                </Col>\n            </Row>\n            <Row>\n                <Container>\n                    {children}\n                </Container>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BasicLayout","import React from 'react'\nimport { BasicLayout } from '../components/layout'\nimport { ChooseStartActorForm, GuessForm } from '../components'\n\nconst PlayPage = ({ currentActor, chooseInitialActor, makeGuess, next, guessCount, guessResult }) => {\n    return (\n        <BasicLayout>\n            {currentActor ?\n                <GuessForm currentActor={currentActor} makeGuess={makeGuess} next={next} guessCount={guessCount} guessResult={guessResult} />\n                :\n                <ChooseStartActorForm chooseInitialActor={chooseInitialActor} />\n            }\n        </BasicLayout>\n    )\n}\n\n\nexport default PlayPage","\r\nimport React from 'react'\r\nimport { BasicLayout } from '../components/layout'\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <BasicLayout>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean facilisis, mi sit amet dapibus rhoncus, nibh sapien vehicula magna, ac scelerisque metus nibh sed mi. In porta orci neque, id condimentum urna fermentum vitae. Vivamus vehicula orci ligula. Etiam suscipit, mauris ut vulputate dignissim, massa arcu venenatis ex, eu euismod velit nibh sit amet sapien. Aenean semper ipsum sed convallis sollicitudin. Donec et bibendum ligula. Vivamus at molestie ligula. Donec viverra magna eu aliquam porttitor. Morbi sed dolor a mauris imperdiet fermentum eget eu nisl. Sed non nisl non felis dapibus accumsan quis vitae neque. Duis fringilla nisi mauris, in ullamcorper ante blandit tristique. Donec ac nulla nisl. Curabitur vel eros justo.</p>\r\n            <p>Nunc finibus, risus et feugiat sollicitudin, ligula purus imperdiet ipsum, vel viverra metus ante vitae tellus. Cras lobortis mauris et mauris rhoncus blandit. Pellentesque eleifend enim a facilisis molestie. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Maecenas quis convallis leo. Donec pharetra eleifend ipsum. Donec pharetra gravida tortor, quis commodo est molestie in. Sed id nisi vel nisi aliquet placerat. Sed eget lobortis mi. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris at justo lobortis turpis viverra ultricies.</p>\r\n            <p>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Vivamus leo justo, vestibulum non arcu at, laoreet mattis leo. Aenean condimentum risus quis ex tincidunt, vitae tristique lorem ornare. Pellentesque nec ex quis dolor sagittis ultrices. Maecenas eu leo lectus. In malesuada purus magna, vitae interdum lacus interdum quis. Praesent dictum in enim eu vehicula. Aliquam hendrerit diam vel mi aliquam, quis pulvinar purus consequat. Quisque tincidunt eu leo quis facilisis. Maecenas cursus auctor augue. Nullam lacinia lectus eget ante sollicitudin sodales. Sed nisi libero, tristique quis placerat eget, pharetra sit amet sapien. Cras vel tellus sem.</p>\r\n            <p>Nulla vitae odio tempus, vehicula eros vitae, tincidunt risus. Aenean sed sapien sed lacus ultrices egestas non non quam. Praesent non eros mi. Vivamus iaculis varius ex in sollicitudin. Suspendisse vulputate ante leo, non viverra ipsum vestibulum quis. Aenean mauris felis, consequat vel nisl et, faucibus eleifend mauris. Fusce quis libero ac mi volutpat efficitur vitae ut dui. Aliquam et hendrerit massa, eget placerat dui. Nullam ultrices, nulla at pharetra blandit, velit ipsum efficitur orci, a aliquam felis magna et orci. Duis id tristique ex, sed ultrices tellus. Donec sit amet ex sit amet orci rhoncus finibus sit amet sit amet nisl. Nulla facilisi. Sed varius ex ut nisi blandit, sit amet volutpat tellus finibus.</p>\r\n            <p>Curabitur convallis augue ligula, a interdum arcu consectetur a. Integer sodales ligula eget tellus consequat, sit amet tincidunt orci fringilla. Donec maximus nisi nulla, in ultrices tellus pretium vel. Suspendisse vel justo rutrum, placerat quam at, placerat augue. Etiam cursus tellus at dolor euismod, sit amet convallis est hendrerit. Etiam iaculis tincidunt bibendum. Pellentesque pharetra nibh ut sollicitudin fermentum. Vestibulum libero quam, pharetra sed elit vel, posuere laoreet enim. Phasellus tempor porttitor venenatis. Aliquam tincidunt dui vitae lobortis tempus. Nunc non cursus nulla, a tristique sapien. Nunc dictum ultrices metus, eu blandit neque commodo sit amet. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\r\n        </BasicLayout >\r\n    )\r\n}\r\n\r\n\r\nexport default AboutPage","import React from 'react';\r\nimport { BasicLayout } from '../components/layout';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <BasicLayout>\r\n            <Jumbotron>\r\n                <h1>Hello, world!</h1>\r\n                <p>\r\n                    This is a simple hero unit, a simple jumbotron-style component for calling\r\n                    extra attention to featured content or information.\r\n                </p>\r\n                <p>\r\n                    <Link to=\"/play\">\r\n                        <Button variant=\"primary\">Start Playing Now!</Button>\r\n                    </Link>\r\n                </p>\r\n            </Jumbotron>\r\n        </BasicLayout>\r\n    )\r\n}\r\nexport default HomePage","import React from 'react';\r\nimport { BasicLayout } from '../components/layout';\r\nimport { Row, Col, Card, CardColumns } from 'react-bootstrap';\r\n\r\nfunction ActorCard({ actor }) {\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={actor.image} />\r\n            <Card.Body>\r\n                <Card.Title>{actor.actorLabel}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nfunction MissedPage({ actors }) {\r\n\r\n    const missedActors = Object.values(actors).filter((actor) => {\r\n        return !actor.guessed && actor.encountered\r\n    })\r\n    return (\r\n        <BasicLayout>\r\n            <h1>you missed {missedActors.length} actors</h1>\r\n            <Row>\r\n                <Col>\r\n                    <CardColumns >\r\n                        {missedActors.map((actor) => <ActorCard key={actor.actorLabel} actor={actor} />)}\r\n                    </CardColumns>\r\n                </Col>\r\n            </Row>\r\n        </BasicLayout>\r\n    )\r\n}\r\nexport default MissedPage","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Switch from 'react-bootstrap/esm/Switch';\nimport { PlayPage, AboutPage, HomePage, MissedPage } from './pages'\nimport { SparqlClient, sample, levenshteinDistance } from './utils';\n\nfunction App() {\n  const maxUnencounteredActors = 1000\n  const client = new SparqlClient()\n  const [currentActor, setCurrentActor] = useState(null)\n  const [guessCount, setGuessCount] = useState(0)\n  const [guessResult, setGuessResult] = useState('')\n  const [allActors, setAllActors] = useState([])\n  const chooseInitialActor = (actor) => {\n    client.getRelatedActors(actor)\n      .then((actors) => {\n        setAllActors(actors)\n        setNextActor(actors)\n      })\n  }\n  const unencounteredActors = (actors) => {\n    return Object.values(actors).filter((v) => !v.encountered);\n  }\n  const setNextActor = (actors) => {\n    const nextActor = sample(unencounteredActors(actors))\n    console.log(`next to guess: ${nextActor.actorLabel}`)\n    setCurrentActor(nextActor)\n  }\n  const makeGuess = ({ guess }, { setSubmitting }) => {\n    setSubmitting(true)\n    setGuessCount(guessCount => guessCount + 1)\n    setGuessResult(getGuessResult(guess))\n    setSubmitting(false)\n  }\n  const next = () => {\n    const guessed = ['EXACT', 'CLOSE_ENOUGH'].includes(guessResult)\n    setAllActors(allActors => {\n      allActors[currentActor.actorLabel].encountered = true\n      allActors[currentActor.actorLabel].guessed = guessed\n      return allActors\n    })\n    if (guessed && unencounteredActors(allActors).length < maxUnencounteredActors) {\n      populateRelatedActors(currentActor)\n    }\n    setGuessCount(0)\n    setGuessResult(null)\n    setNextActor(allActors)\n  }\n  const populateRelatedActors = (actor) => {\n    client.getRelatedActors(actor)\n      .then((newActors) => {\n        setAllActors(allActors => {\n          const newAllActors = mergeActors(allActors, newActors)\n          return newAllActors\n        })\n      })\n  }\n\n  const mergeActors = (actorDict1, actorDict2) => {\n    for (const [actorName, actorObject] of Object.entries(actorDict2)) {\n      if (actorName in actorDict1) {\n        const actor = actorDict1[actorName]\n        for (const movie of actorObject.movies) {\n          const movieTitles = actor.movies.map(movie => movie.movieLabel)\n          if (!(movieTitles.includes(movie.movieLabel))) {\n            actor.movies.push(movie)\n          }\n        }\n      } else {\n        actorDict1[actorName] = actorObject\n      }\n    }\n    return actorDict1\n  }\n\n  const getGuessResult = (guess) => {\n    const distance = levenshteinDistance(currentActor.actorLabel.toLowerCase(), guess.toLowerCase())\n    if (distance === 0) {\n      return \"EXACT\"\n    } else if (distance <= Math.ceil(currentActor.actorLabel.length * 0.1)) {\n      return \"CLOSE_ENOUGH\"\n    } else if ((new RegExp(`\\\\b${guess.toLowerCase()}\\\\b`, 'i')).test(currentActor.actorLabel.toLowerCase())) {\n      return \"PARTIAL\"\n    } else if (distance <= Math.ceil(currentActor.actorLabel.length * 0.15)) {\n      return \"CLOSE\"\n    } else {\n      return \"WRONG\"\n    }\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route exact strict path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact strict path=\"/play\">\n          <PlayPage currentActor={currentActor} chooseInitialActor={chooseInitialActor} makeGuess={makeGuess} next={next} guessCount={guessCount} guessResult={guessResult} />\n        </Route>\n        <Route exact strict path=\"/missed\">\n          <MissedPage actors={allActors} />\n        </Route>\n        <Route exact strict path=\"/about\">\n          <AboutPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}